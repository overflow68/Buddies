{"version":3,"sources":["Firebase.js","components/SignOut.js","components/sendMessage.js","components/message.js","components/Chat.js","components/SignIn.js","App.js","index.js"],"names":["initFire","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","SignOut","className","onClick","signOut","SendMessage","scroll","useState","msg","setMsg","e","a","key","preventDefault","currentUser","uid","photoURL","addDoc","collection","message","id","createdAt","serverTimestamp","current","scrollIntoView","behavior","placeholder","value","onKeyPress","onChange","target","Message","props","class","src","img","alt","Chat","messages","setMessages","useRef","q","query","orderBy","limit","onSnapshot","querySnapshot","msgs","forEach","doc","push","data","reverse","useEffect","getMessages","map","ref","console","log","SignIn","size","color","provider","GoogleAuthProvider","signInWithPopup","then","result","credentialFromResult","accessToken","user","catch","error","code","email","credentialFromError","App","useAuthState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3817f89f.chunk.js","sourcesContent":["\nimport {initializeApp} from \"firebase/app\";\nimport {getAuth} from 'firebase/auth'\nimport {getFirestore} from 'firebase/firestore'\n\nexport const initFire = initializeApp({\n  apiKey: \"AIzaSyDX2y3yFsh7HTTnzHG_BKt2LkOJ1BiuIxk\",\n  authDomain: \"buddies-be2bb.firebaseapp.com\",\n  projectId: \"buddies-be2bb\",\n  storageBucket: \"buddies-be2bb.appspot.com\",\n  messagingSenderId: \"779455827700\",\n  appId: \"1:779455827700:web:c6e2afac1e076d582618a1\"\n});\n\n export const auth = getAuth(initFire)\n\n export const db = getFirestore(initFire);\n","import React from 'react'\nimport {auth} from '../Firebase.js'\nimport '../styles/signout.css'\nfunction SignOut() {\n    return (\n        <div>\n            <button className=\"signout\" onClick={() => auth.signOut()}>Sign Out</button>\n        </div>\n    )\n}\n\nexport default SignOut\n","import React, {useState} from 'react'\nimport {db,auth} from '../Firebase'\nimport {addDoc,collection, serverTimestamp} from 'firebase/firestore'\nimport '../styles/input.css'\n\n\nfunction SendMessage({scroll}) {\n    const [msg, setMsg] = useState(\"\")\n    async function sendMsg(e){\n        if(msg !== \"\" && e.key===\"Enter\"){\n        e.preventDefault()\n        const {uid, photoURL} = auth.currentUser\n        const docRef = await addDoc(collection(db, \"messages\"), {\n            message: msg,\n            id: uid,\n            photoURL,\n            createdAt: serverTimestamp()\n\n          });\n          setMsg(\"\")}\n          scroll.current.scrollIntoView({behavior: \"smooth\"})\n        }\n    \n    return (\n        <div className=\"send-message\">\n            <div className=\"input-style\"><input placeholder=\"Type something...\"  value={msg} onKeyPress={sendMsg} onChange={e => setMsg(e.target.value)} /></div>\n        </div>\n    )\n}\n\nexport default SendMessage\n","import React from 'react'\n\n\nfunction Message(props) {\n    return (\n        <div className={props.class}>\n            {props.class !== \"msg sent\"?\n            <div className=\"cont-received\"  >\n                            <img className=\"img\" src={props.img} alt=\"\" />\n                            <div className=\"received-text\"><p>{props.msg}</p></div>\n                        </div>:\n                        <div className=\"cont-sent\" key={props.id} >\n                        <div className=\"sent-text\"><p>{props.msg}</p></div>\n                        <img className=\"img\" src={props.img} alt=\"\" />\n                    </div>\n                        }\n        </div>\n    )\n}\n\nexport default Message\n","import React, {useState, useEffect, useRef} from 'react';\nimport '../styles/chat.css'\nimport SignOut from './SignOut'\nimport { db, auth } from '../Firebase'\nimport SendMessage from './sendMessage';\nimport Message from './message';\nimport {collection, onSnapshot,query, orderBy, limit} from \"firebase/firestore\";\n\nfunction Chat() {\n    const [messages, setMessages] = useState([])\n    const scroll = useRef()\n    async function getMessages(){\n        const q = query(collection(db, \"messages\"),orderBy(\"createdAt\",\"desc\"),limit(50));\n        \n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\n            const msgs = [];\n            scroll.current.scrollIntoView({behavior: \"smooth\"})\n            querySnapshot.forEach((doc) => {\n\n                msgs.push(doc.data());\n                \n            });\n            msgs.reverse()\n            setMessages(msgs)\n          });\n    }\n    useEffect(() => {\n        getMessages()\n        scroll.current.scrollIntoView({behavior: \"smooth\"})\n    }, [])\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className='chat-cont'>\n                    <div className='signout-btn-cont'><SignOut/></div>\n            <div className=\"chat\">\n                \n                {messages.map(({ id, message, photoURL}) => (\n                    <Message  class={`msg ${id === auth.currentUser.uid ? 'sent' : 'received'}`} img={photoURL} msg={message}/>\n                    \n                ))}\n                <div ref={scroll}></div>\n                {console.log(scroll)}\n            </div><SendMessage scroll={scroll}/></div></div>\n            \n        </div>\n    )\n}\n\nexport default Chat\n","import React from 'react'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport {AiFillLock} from 'react-icons/ai'\nfunction SignIn() {\n    function login(){\n        const provider = new GoogleAuthProvider();\n        const auth = getAuth();\n    signInWithPopup(auth, provider)\n      .then((result) => {\n       \n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        \n        const user = result.user;\n       \n      }).catch((error) => {\n       \n        const errorCode = error.code;\n        const errorMessage = error.message;\n       \n        const email = error.email;\n       \n        const credential = GoogleAuthProvider.credentialFromError(error);\n       \n      });\n      }\n    return (\n        <div className=\"signin\">\n            <p className=\"info\">SIGN IN TO ACCESS CHAT</p> \n            <div><AiFillLock className='locker' size=\"300\" color=\"rgb(180, 89, 89)\"></AiFillLock></div>\n            <button className=\"signin-btn\" onClick={login}>Sign in with Google</button>\n            \n        </div>\n    )\n}\n\nexport default SignIn\n","import './styles/App.css';\nimport Chat from './components/Chat.js'\nimport SignIn from './components/SignIn';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {auth} from './Firebase';\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n\n  return (\n    <div className=\"App\">\n      {user?<Chat/>:<SignIn/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}